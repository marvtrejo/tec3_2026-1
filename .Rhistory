panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("1,0", "0,1")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = ""),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
geom_text(x = 0.5, y = 0.5, label = "1u2",
size = 6, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("1,0", "0,1")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = label),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
geom_text(x = 0.5, y = 0.5, label = "1u2",
size = 6, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("1,0", "0,1")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = label),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
geom_text(x = 0.5, y = 0.5, label = "1u2",
size = 20, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("1,0", "0,1")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = label),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
annotate("text", x = 0.5, y = 0.5, label = expression(1 * u^2),
size = 6, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("(1,0)", "(0,1)")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = label),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
annotate("text", x = 0.5, y = 0.5, label = expression(1 * u^2),
size = 6, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(ggplot2)
v1 <- c(1, 0)
v2 <- c(0, 1)
poly <- data.frame(
x = c(0, v1[1], v1[1] + v2[1], v2[1]),
y = c(0, v1[2], v1[2] + v2[2], v2[2]),
id = 1
)
vecs <- data.frame(
x = c(0, 0),
y = c(0, 0),
xend = c(v1[1], v2[1]),
yend = c(v1[2], v2[2]),
label = c("(1,0)", "(0,1)")
)
ggplot() +
geom_polygon(data = poly, aes(x = x, y = y, group = id),
fill = "steelblue", alpha = 0.25, color = "steelblue") +
geom_segment(data = vecs, aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = unit(0.25, "cm")),
size = 1.1, color = "#003366") +
geom_text(data = vecs, aes(x = xend, y = yend, label = label),
nudge_x = 0.08, nudge_y = 0.08, size = 5) +
annotate("text", x = 0.5, y = 0.5, label = expression(1 * u^2),
size = 6, color = "black") +
geom_point(data = poly, aes(x = x, y = y), size = 1.5) +
coord_equal(xlim = c(-0.2, 1.2), ylim = c(-0.2, 1.2)) +
theme_minimal(base_size = 14) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()
) +
labs(
title = "Paralelogramo generado por A",
subtitle = bquote("Área =|A|= 1")
)
library(plotly)
# Definir los vértices del paralelepípedo
vertices <- data.frame(
x = c(0, 1, 1, 0, 0, 1, 1, 0),
y = c(0, 0, 1, 1, 0, 0, 1, 1),
z = c(0, 0, 0, 0, 1, 1, 1, 1)
)
# Caras del paralelepípedo (como triángulos)
caras <- list(
c(1,2,3,4), # base inferior
c(5,6,7,8), # base superior
c(1,2,6,5), # frente
c(2,3,7,6), # derecha
c(3,4,8,7), # atrás
c(4,1,5,8)  # izquierda
)
# Crear figura
fig <- plot_ly(type = "mesh3d",
x = vertices$x,
y = vertices$y,
z = vertices$z,
i = c(0,1,2,3,0,4,1,5,2,6,3,7),
j = c(1,2,3,0,4,5,6,2,7,3,4,0),
k = c(4,5,6,7,1,2,3,0,5,6,7,4),
opacity = 0.5,
color = "skyblue")
# Agregar vectores base
fig <- fig %>%
add_trace(type = "scatter3d", mode = "lines+text",
x = c(0,1), y = c(0,0), z = c(0,0),
line = list(color = "red", width = 6),
text = "u",
textposition = "top center") %>%
add_trace(type = "scatter3d", mode = "lines+text",
x = c(0,0), y = c(0,1), z = c(0,0),
line = list(color = "green", width = 6),
text = "v",
textposition = "top center") %>%
add_trace(type = "scatter3d", mode = "lines+text",
x = c(0,0), y = c(0,0), z = c(0,1),
line = list(color = "blue", width = 6),
text = "w",
textposition = "top center")
# Etiqueta del volumen
fig <- fig %>%
add_annotations(
x = 0.4, y = 0.4, z = 0.4,
text = "1u³",
showarrow = FALSE,
font = list(size = 14)
)
# Ajustes de diseño
fig <- fig %>%
layout(scene = list(
xaxis = list(title = "", showticklabels = FALSE),
yaxis = list(title = "", showticklabels = FALSE),
zaxis = list(title = "", showticklabels = FALSE)
))
fig
library(ggplot2)
library(dplyr)
# --- 1. Definir los vértices del cubo unitario ---
vertices <- data.frame(
x = c(0, 1, 1, 0, 0, 1, 1, 0),
y = c(0, 0, 1, 1, 0, 0, 1, 1),
z = c(0, 0, 0, 0, 1, 1, 1, 1)
)
# --- 2. Proyección isométrica 3D -> 2D ---
# Esto nos permite visualizarlo en un plano
vertices <- vertices %>%
mutate(
X = x + 0.5 * y,
Y = z + 0.5 * y
)
# --- 3. Caras del paralelepípedo ---
caras <- list(
c(1,2,3,4), # base inferior
c(5,6,7,8), # base superior
c(1,2,6,5), # frente
c(2,3,7,6), # derecha
c(3,4,8,7), # atrás
c(4,1,5,8)  # izquierda
)
# --- 4. Crear data.frame para las caras visibles ---
# Mostramos solo tres para dar sensación de profundidad
caras_visibles <- caras[c(1, 3, 4)]
df_caras <- do.call(rbind, lapply(seq_along(caras_visibles), function(i) {
v <- vertices[caras_visibles[[i]], c("X", "Y")]
data.frame(v, id = i)
}))
# --- 5. Crear data.frame para los vectores base ---
vectores <- data.frame(
xend = c(1, 0.5, 0),
yend = c(0, 0.5, 1),
label = c("u", "v", "w")
)
# --- 6. Dibujar con ggplot ---
ggplot() +
# Caras del paralelepípedo
geom_polygon(data = df_caras, aes(X, Y, group = id),
fill = "skyblue", color = "black", alpha = 0.4) +
# Ejes (vectores base)
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 0),
color = "red", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0.5, yend = 0.5),
color = "green", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 1),
color = "blue", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
# Etiquetas de los vectores
geom_text(data = vectores, aes(x = xend, y = yend, label = label),
vjust = -0.5, fontface = "bold", size = 5) +
# Etiqueta central (volumen)
annotate("text", x = 0.4, y = 0.4, label = "1u³", size = 6, fontface = "bold") +
# Estilo general
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "white", color = NA))
library(ggplot2)
library(dplyr)
# --- 1. Definir los vértices del cubo unitario ---
vertices <- data.frame(
x = c(0, 1, 1, 0, 0, 1, 1, 0),
y = c(0, 0, 1, 1, 0, 0, 1, 1),
z = c(0, 0, 0, 0, 1, 1, 1, 1)
)
# --- 2. Proyección isométrica 3D -> 2D ---
# Esto nos permite visualizarlo en un plano
vertices <- vertices %>%
mutate(
X = x + 0.5 * y,
Y = z + 0.5 * y
)
# --- 3. Caras del paralelepípedo ---
caras <- list(
c(1,2,3,4), # base inferior
c(5,6,7,8), # base superior
c(1,2,6,5), # frente
c(2,3,7,6), # derecha
c(3,4,8,7), # atrás
c(4,1,5,8)  # izquierda
)
# --- 4. Crear data.frame para las caras visibles ---
# Mostramos solo tres para dar sensación de profundidad
caras_visibles <- caras[c(1, 3, 4)]
df_caras <- do.call(rbind, lapply(seq_along(caras_visibles), function(i) {
v <- vertices[caras_visibles[[i]], c("X", "Y")]
data.frame(v, id = i)
}))
# --- 5. Crear data.frame para los vectores base ---
vectores <- data.frame(
xend = c(1, 0.5, 0),
yend = c(0, 0.5, 1),
label = c("u", "v", "w")
)
# --- 6. Dibujar con ggplot ---
ggplot() +
# Caras del paralelepípedo
geom_polygon(data = df_caras, aes(X, Y, group = id),
fill = "skyblue", color = "black", alpha = 0.4) +
# Ejes (vectores base)
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 0),
color = "red", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0.5, yend = 0.5),
color = "green", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 1),
color = "blue", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
# Etiquetas de los vectores
geom_text(data = vectores, aes(x = xend, y = yend, label = label),
vjust = -0.5, fontface = "bold", size = 5) +
# Etiqueta central (volumen)
annotate("text", x = 0.4, y = 0.4, label = "1u³", size = 6, fontface = "bold") +
# Estilo general
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "white", color = NA))
library(ggplot2)
library(dplyr)
# --- 1. Definir los vértices del cubo unitario ---
vertices <- data.frame(
x = c(0, 1, 1, 0, 0, 1, 1, 0),
y = c(0, 0, 1, 1, 0, 0, 1, 1),
z = c(0, 0, 0, 0, 1, 1, 1, 1)
)
# --- 2. Proyección isométrica 3D -> 2D ---
vertices <- vertices %>%
mutate(
X = x + 0.5 * y,   # agrega inclinación horizontal
Y = z + 0.5 * y    # agrega profundidad vertical
)
# --- 3. Definir las seis caras del cubo ---
caras <- list(
c(1,2,3,4), # base inferior
c(5,6,7,8), # base superior
c(1,2,6,5), # frente
c(2,3,7,6), # derecha
c(3,4,8,7), # atrás
c(4,1,5,8)  # izquierda
)
# --- 4. Crear data.frame con todas las caras ---
df_caras <- do.call(rbind, lapply(seq_along(caras), function(i) {
v <- vertices[caras[[i]], c("X", "Y")]
data.frame(v, id = i)
}))
# --- 5. Definir los vectores base ---
vectores <- data.frame(
xend = c(1, 0.5, 0),
yend = c(0, 0.5, 1),
label = c("u", "v", "w")
)
# --- 6. Dibujar con ggplot2 ---
ggplot() +
# Caras del cubo (todas las 6)
geom_polygon(data = df_caras, aes(X, Y, group = id),
fill = "skyblue", color = "black", alpha = 0.4) +
# Vectores base (ejes del paralelepípedo)
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 0),
color = "red", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0.5, yend = 0.5),
color = "green", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 1),
color = "blue", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
# Etiquetas de los vectores
geom_text(data = vectores, aes(x = xend, y = yend, label = label),
vjust = -0.5, fontface = "bold", size = 5) +
# Etiqueta central del volumen
annotate("text", x = 0.4, y = 0.4, label = "1u³", size = 6, fontface = "bold") +
# Estilo visual
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "white", color = NA))
library(ggplot2)
library(dplyr)
vertices <- data.frame(
x = c(0, 1, 1, 0, 0, 1, 1, 0),
y = c(0, 0, 1, 1, 0, 0, 1, 1),
z = c(0, 0, 0, 0, 1, 1, 1, 1)
)
vertices <- vertices %>%
mutate(
X = x + 0.5 * y,
Y = z + 0.5 * y
)
caras <- list(
c(1,2,3,4),
c(5,6,7,8),
c(1,2,6,5),
c(2,3,7,6),
c(3,4,8,7),
c(4,1,5,8)
)
df_caras <- do.call(rbind, lapply(seq_along(caras), function(i) {
v <- vertices[caras[[i]], c("X", "Y")]
data.frame(v, id = i)
}))
vectores <- data.frame(
xend = c(1, 0.5, 0),
yend = c(0, 0.5, 1),
label = c("u", "v", "w")
)
ggplot() +
geom_polygon(data = df_caras, aes(X, Y, group = id),
fill = "skyblue", color = "black", alpha = 0.4) +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 0),
color = "red", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0.5, yend = 0.5),
color = "green", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 1),
color = "blue", size = 1.2, arrow = arrow(length = unit(0.2, "cm"))) +
geom_text(data = vectores, aes(x = xend, y = yend, label = label),
vjust = -0.5, fontface = "bold", size = 5) +
annotate("text", x = 0.4, y = 0.4, label = "1u³", size = 6, fontface = "bold") +
coord_fixed() +
theme_void() +
theme(panel.background = element_rect(fill = "white", color = NA)) +
labs(
title = "Paralelepipedo generado por B",
subtitle = bquote("Volumen =|B|= 1")
)
