name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,
states = list(
inactive = list(
enabled = FALSE
),
hover = list(
animation = list(duration = 0)
)
)
)
)
View(df1)
library(highcharter)
# Rango de x
x_val <- seq(-5, 5, 0.5)
# Ecuaciones
y1 <- (5/8)*x_val +(1/2)
y2 <- -(2/3)*x_val +(153/120)
# Intersecciones
puntos_a <- data.frame(x= c(0,-4/5), y=c(1/2,0))
puntos_b <- data.frame(x= c(0,153/120), y=c(153/80,0))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4,153/40)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,
states = list(
inactive = list(
enabled = FALSE
),
hover = list(
animation = list(duration = 0)
)
)
)
)
library(highcharter)
# Rango de x
x_val <- seq(-5, 5, 0.5)
# Ecuaciones
y1 <- (0.625)*x_val +(0.5)
y2 <- -(0.666)*x_val +(1.275)
# Intersecciones
puntos_a <- data.frame(x= c(0,-0.8), y=c(0.5,0))
puntos_b <- data.frame(x= c(0,1.275), y=c(1.9125,0))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4,3.825)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,
states = list(
inactive = list(
enabled = FALSE
),
hover = list(
animation = list(duration = 0)
)
)
)
)
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0))
puntos_b <- data.frame(x= c(0, 1.275), y=c(1.275, 0))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
# library(highcharter)
#
# # Rango de x
# x_val <- seq(-5, 5, 0.5)
#
# # Ecuaciones
# y1 <- (0.625)*x_val +(0.5)
# y2 <- -(0.666)*x_val +(1.275)
#
# # Intersecciones
# puntos_a <- data.frame(x= c(0,-0.8), y=c(0.5,0))
# puntos_b <- data.frame(x= c(0,1.275), y=c(1.9125,0))
#
# # Solución del sistema
# A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
# b <- c(-4,3.825)
# sol <- solve(A,b)
#
# # Gráfica
# df1 <- data.frame(x = x_val, y = y1)
# df2 <- data.frame(x = x_val, y = y2)
# df_sol <- data.frame(x = sol[1], y = sol[2])
#
# highchart() %>%
#   hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
#                 name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
#                 marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
#   hc_title(text = "Solución por método gráfico",
#            style = list(fontSize = "18px", fontWeight = "bold")) %>%
#   hc_legend(enabled = TRUE) %>%
#   hc_xAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_yAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_tooltip(shared = FALSE) %>%
#     hc_plotOptions(
#     series = list(
#       animation = FALSE,
#       states = list(
#         inactive = list(
#           enabled = FALSE
#         ),
#         hover = list(
#           animation = list(duration = 0)
#         )
#       )
#     )
#   )
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0))
puntos_b <- data.frame(x= c(0, 1.9125), y=c(1.275, 0))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
# library(highcharter)
#
# # Rango de x
# x_val <- seq(-5, 5, 0.5)
#
# # Ecuaciones
# y1 <- (0.625)*x_val +(0.5)
# y2 <- -(0.666)*x_val +(1.275)
#
# # Intersecciones
# puntos_a <- data.frame(x= c(0,-0.8), y=c(0.5,0))
# puntos_b <- data.frame(x= c(0,1.275), y=c(1.9125,0))
#
# # Solución del sistema
# A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
# b <- c(-4,3.825)
# sol <- solve(A,b)
#
# # Gráfica
# df1 <- data.frame(x = x_val, y = y1)
# df2 <- data.frame(x = x_val, y = y2)
# df_sol <- data.frame(x = sol[1], y = sol[2])
#
# highchart() %>%
#   hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
#                 name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
#                 marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
#   hc_title(text = "Solución por método gráfico",
#            style = list(fontSize = "18px", fontWeight = "bold")) %>%
#   hc_legend(enabled = TRUE) %>%
#   hc_xAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_yAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_tooltip(shared = FALSE) %>%
#     hc_plotOptions(
#     series = list(
#       animation = FALSE,
#       states = list(
#         inactive = list(
#           enabled = FALSE
#         ),
#         hover = list(
#           animation = list(duration = 0)
#         )
#       )
#     )
#   )
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 1.9125), y=c(1.275, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 1.9125), y=c(1.275, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
library(highcharter)
# Rango de x
x_val <- seq(-60, 60, 1)
# Ecuaciones
y1 <- 2*x_val -55
y2 <- -1.5*x_val + 50
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, 33.333), y=c(50, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 27.5), y=c(-55, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(2, 3, 1, -2), nrow=2, byrow=TRUE)
b <- c(100, -55)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
View(df1)
View(df_sol)
library(highcharter)
# Rango de x
x_val <- seq(-60, 60, 1)
# Ecuaciones
y1 <- 2*x_val -55
y2 <- -1.5*x_val + 50
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, 100/3), y=c(50, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 27.5), y=c(-55, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(2, 3, 1, -2), nrow=2, byrow=TRUE)
b <- c(100, -55)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[2], y = sol[1])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "Q = 2P - 55", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2Q + 3P = 100", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
