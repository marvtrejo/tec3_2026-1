hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "black")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "black")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(title = list(text = "x")) %>%
hc_yAxis(title = list(text = "y")) %>%
hc_tooltip(shared = TRUE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "black")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "black")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "",
marker = list(symbol = "triangle", radius = 6, fillColor = "black")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(title = list(text = "x")) %>%
hc_yAxis(title = list(text = "y")) %>%
hc_tooltip(shared = FALSE)
eje_y <- data.frame(x = x_val, y=0)
View(eje_y)
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-10, 10, 0.5))
View(eje_x)
library(highcharter)
# Rango de x
x_val <- seq(-10, 10, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-10, 10, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_add_series(eje_x, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_add_series(eje_y, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(title = list(text = "x")) %>%
hc_yAxis(title = list(text = "y")) %>%
hc_tooltip(shared = FALSE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_add_series(eje_x, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_add_series(eje_y, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(title = list(text = "x")) %>%
hc_yAxis(title = list(text = "y")) %>%
hc_tooltip(shared = FALSE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_add_series(eje_x, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_add_series(eje_y, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
marker = list(enabled = FALSE)) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(
# title = list(text = "x"),
plotLines = list(
list(value = 0, color = "black", width = 2, zIndex = 5))) %>%
hc_yAxis(title = list(text = "y")) %>%
hc_tooltip(shared = FALSE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
# hc_add_series(eje_x, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
#               marker = list(enabled = FALSE)) %>%
# hc_add_series(eje_y, "spline", hcaes(x = x, y = y), name = "Eje X", color = "black",
#               marker = list(enabled = FALSE)) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 5))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 5))) %>%
hc_tooltip(shared = FALSE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(list(
list( # Eje X principal
title = list(text = "Eje X Principal"),
plotLines = list(list(value = 0, color = "black", width = 2)) # Línea en 0
),
list( # Eje X secundario
title = list(text = "Eje X Secundario"),
opposite = TRUE,  # Coloca el eje en la parte superior
plotLines = list(list(value = 0, color = "black", width = 2))
)
)) %>%
# hc_xAxis(plotLines = list(
#   list(value = 0, color = "darkgrey", width = 2, zIndex = 3)),
#   ) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3)),
) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,  # Desactiva animación en series
states = list(
inactive = list(
enabled = FALSE  # Evita que las otras series se atenúen al hacer hover
),
hover = list(
animation = list(duration = 0) # Elimina animación de hover
)
)
)
)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3)),
) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,  # Desactiva animación en series
states = list(
inactive = list(
enabled = FALSE  # Evita que las otras series se atenúen al hacer hover
),
hover = list(
animation = list(duration = 0) # Elimina animación de hover
)
)
)
)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,  # Desactiva animación en series
states = list(
inactive = list(
enabled = FALSE  # Evita que las otras series se atenúen al hacer hover
),
hover = list(
animation = list(duration = 0) # Elimina animación de hover
)
)
)
)
library(highcharter)
# Rango de x
x_val <- seq(-1, 5, 0.5)
# Ejes
eje_y <- data.frame(x = x_val, y=0)
eje_x <- data.frame(x = 0, y=seq(-1, 5, 0.5))
# Ecuaciones
y1 <- 5 - x_val
y2 <- x_val - 1
# Intersecciones
puntos_a <- data.frame(x= c(0,5), y=c(5,0))
puntos_b <- data.frame(x= c(0,1), y=c(-1,0))
# Solución del sistema
A <- matrix(c(1,1, 1,-1), nrow=2, byrow=TRUE)
b <- c(5,1)
sol <- solve(A,b)
# Gráfica
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "x + y = 5", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "x - y = 1", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
name = "Intersección",
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(
list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(
series = list(
animation = FALSE,  # Desactiva animación en series
states = list(
inactive = list(
enabled = FALSE  # Evita que las otras series se atenúen al hacer hover
),
hover = list(
animation = list(duration = 0) # Elimina animación de hover
)
)
)
)
