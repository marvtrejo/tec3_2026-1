#
# # Gráfica
# df1 <- data.frame(x = x_val, y = y1)
# df2 <- data.frame(x = x_val, y = y2)
# df_sol <- data.frame(x = sol[1], y = sol[2])
#
# highchart() %>%
#   hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
#                 marker = list(enabled = FALSE)) %>%
#   hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
#                 name = paste0("Solución (", sol[1], ", ", sol[2], ")"),
#                 marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "diamond", radius = 6, fillColor = "orange")) %>%
#   hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
#                 name = "Intersección",
#                 showInLegend = FALSE,
#                 marker = list(symbol = "triangle", radius = 6, fillColor = "orange")) %>%
#   hc_title(text = "Solución por método gráfico",
#            style = list(fontSize = "18px", fontWeight = "bold")) %>%
#   hc_legend(enabled = TRUE) %>%
#   hc_xAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_yAxis(plotLines = list(
#     list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
#   hc_tooltip(shared = FALSE) %>%
#     hc_plotOptions(
#     series = list(
#       animation = FALSE,
#       states = list(
#         inactive = list(
#           enabled = FALSE
#         ),
#         hover = list(
#           animation = list(duration = 0)
#         )
#       )
#     )
#   )
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 1.9125), y=c(1.275, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
library(highcharter)
# Rango de x
x_val <- seq(-2, 3, 0.1)
# Ecuaciones
y1 <- 0.625*x_val + 0.5
y2 <- -0.666*x_val + 1.275
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, -0.8), y=c(0.5, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 1.9125), y=c(1.275, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(5, -8, 2, 3), nrow=2, byrow=TRUE)
b <- c(-4, 3.825)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Solución por método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
library(highcharter)
# Rango de x
x_val <- seq(-60, 60, 1)
# Ecuaciones
y1 <- 2*x_val -55
y2 <- -1.5*x_val + 50
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, 33.333), y=c(50, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 27.5), y=c(-55, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(2, 3, 1, -2), nrow=2, byrow=TRUE)
b <- c(100, -55)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "5x - 8y = -64/16", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2x + 3y = 153/40", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
View(df1)
View(df_sol)
library(highcharter)
# Rango de x
x_val <- seq(-60, 60, 1)
# Ecuaciones
y1 <- 2*x_val -55
y2 <- -1.5*x_val + 50
# Intersecciones con ejes
puntos_a <- data.frame(x= c(0, 100/3), y=c(50, 0), label= c("Punto A1", "Punto A2"))
puntos_b <- data.frame(x= c(0, 27.5), y=c(-55, 0), label= c("Punto B1", "Punto B2"))
# Solución del sistema
A <- matrix(c(2, 3, 1, -2), nrow=2, byrow=TRUE)
b <- c(100, -55)
sol <- solve(A,b)
# Dataframes
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[2], y = sol[1])
# Gráfica
highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = "Q = 2P - 55", color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = "2Q + 3P = 100", color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")) %>%
hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}")
) %>%
hc_title(text = "Método gráfico",
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
## D)
library(highcharter)
graficar_sistema2d <- function(A, b, x_range = c(-5, 5), step = 0.1,
eq_labels = c("Ecuación 1", "Ecuación 2"),
puntos_a = NULL, puntos_b = NULL,
titulo = "Método gráfico") {
sol <- solve(A, b)
a1 <- A[1,1]; b1 <- A[1,2]; c1 <- b[1]
a2 <- A[2,1]; b2 <- A[2,2]; c2 <- b[2]
x_val <- seq(x_range[1], x_range[2], step)
y1 <- (c1 - a1*x_val) / b1
y2 <- (c2 - a2*x_val) / b2
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
hc <- highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = eq_labels[1], color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = eq_labels[2], color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = "Solución",
# paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "black")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
if (!is.null(puntos_a)) {
hc <- hc %>% hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
if (!is.null(puntos_b)) {
hc <- hc %>% hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
return(hc)
}
graficar_sistema3d <- function(A, b,
range = c(-10, 10), step = 1,
eq_labels = c("Ecuación 1", "Ecuación 2", "Ecuación 3"),
titulo = "Sistema 3x3 - Método gráfico") {
sol <- solve(A, b)
sol_df <- data.frame(x = sol[1], y = sol[2], z = sol[3])
x_seq <- seq(range[1], range[2], step)
y_seq <- seq(range[1], range[2], step)
grid <- expand.grid(x = x_seq, y = y_seq)
z1 <- (b[1] - A[1,1]*grid$x - A[1,2]*grid$y) / A[1,3]
z2 <- (b[2] - A[2,1]*grid$x - A[2,2]*grid$y) / A[2,3]
z3 <- (b[3] - A[3,1]*grid$x - A[3,2]*grid$y) / A[3,3]
df1 <- data.frame(x = grid$x, y = grid$y, z = z1)
df2 <- data.frame(x = grid$x, y = grid$y, z = z2)
df3 <- data.frame(x = grid$x, y = grid$y, z = z3)
hc <- highchart() %>%
hc_chart(type = "scatter3d", options3d = list(
enabled = TRUE, alpha = 10, beta = 30, depth = 500, viewDistance = 25
)) %>%
hc_add_series(df1, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[1], color = "blue", marker = list(radius = 1)) %>%
hc_add_series(df2, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[2], color = "red", marker = list(radius = 1)) %>%
hc_add_series(df3, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[3], color = "green", marker = list(radius = 1)) %>%
hc_add_series(sol_df, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = paste0("Solución (", round(sol[1],2), ", ", round(sol[2],2), ", ", round(sol[3],2), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold"))
return(hc)
}
d_A <- matrix(c(1, 1, 1, 1, 1, 0, 1, -1, 1), nrow=3, byrow=TRUE)
d_b <- c(6, 3, 2)
# int_a6 <- data.frame(x= c(25/4, 0), y=c(0, 50), label= c("Punto A1", "Punto A2"))
# int_b6 <- data.frame(x= c(-23/7, 0), y=c(0, 23), label= c("Punto B1", "Punto B2"))
#
# graficar_sistema3d(A = a6_A,
#                    b = a6_b,
#                    x_range = c(-5,10),
#                    eq_labels = c("Q=50-8P", "Q=23+7P"),
#                    puntos_a = int_a6,
#                    puntos_b = int_b6)
graficar_sistema3d(d_A,
d_b,
x_range = c(-10, 10),
eq_labels = c("x+y+z=6", "x+y=3", "x-y+z=2"))
d_A <- matrix(c(1, 1, 1, 1, 1, 0, 1, -1, 1), nrow=3, byrow=TRUE)
d_b <- c(6, 3, 2)
# int_a6 <- data.frame(x= c(25/4, 0), y=c(0, 50), label= c("Punto A1", "Punto A2"))
# int_b6 <- data.frame(x= c(-23/7, 0), y=c(0, 23), label= c("Punto B1", "Punto B2"))
#
# graficar_sistema3d(A = a6_A,
#                    b = a6_b,
#                    x_range = c(-5,10),
#                    eq_labels = c("Q=50-8P", "Q=23+7P"),
#                    puntos_a = int_a6,
#                    puntos_b = int_b6)
graficar_sistema3d(d_A,
d_b,
eq_labels = c("x+y+z=6", "x+y=3", "x-y+z=2"))
library(highcharter)
graficar_sistema2d <- function(A, b, x_range = c(-5, 5), step = 0.1,
eq_labels = c("Ecuación 1", "Ecuación 2"),
puntos_a = NULL, puntos_b = NULL,
titulo = "Método gráfico") {
sol <- solve(A, b)
a1 <- A[1,1]; b1 <- A[1,2]; c1 <- b[1]
a2 <- A[2,1]; b2 <- A[2,2]; c2 <- b[2]
x_val <- seq(x_range[1], x_range[2], step)
y1 <- (c1 - a1*x_val) / b1
y2 <- (c2 - a2*x_val) / b2
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
hc <- highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = eq_labels[1], color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = eq_labels[2], color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = "Solución",
# paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "black")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
if (!is.null(puntos_a)) {
hc <- hc %>% hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
if (!is.null(puntos_b)) {
hc <- hc %>% hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
return(hc)
}
graficar_sistema3d <- function(A, b,
range = c(-10, 10), step = 1,
eq_labels = c("Ecuación 1", "Ecuación 2", "Ecuación 3"),
titulo = "Sistema 3x3 - Método gráfico") {
sol <- solve(A, b)
sol_df <- data.frame(x = sol[1], y = sol[2], z = sol[3])
x_seq <- seq(range[1], range[2], step)
y_seq <- seq(range[1], range[2], step)
grid <- expand.grid(x = x_seq, y = y_seq)
z1 <- (b[1] - A[1,1]*grid$x - A[1,2]*grid$y) / A[1,3]
z2 <- (b[2] - A[2,1]*grid$x - A[2,2]*grid$y) / A[2,3]
z3 <- (b[3] - A[3,1]*grid$x - A[3,2]*grid$y) / A[3,3]
df1 <- data.frame(x = grid$x, y = grid$y, z = z1)
df2 <- data.frame(x = grid$x, y = grid$y, z = z2)
df3 <- data.frame(x = grid$x, y = grid$y, z = z3)
hc <- highchart() %>%
hc_chart(type = "scatter3d", options3d = list(
enabled = TRUE, alpha = 10, beta = 30, depth = 500, viewDistance = 25
)) %>%
hc_add_series(df1, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[1], color = "blue", marker = list(radius = 2)) %>%
hc_add_series(df2, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[2], color = "red", marker = list(radius = 2)) %>%
hc_add_series(df3, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[3], color = "green", marker = list(radius = 2)) %>%
hc_add_series(sol_df, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = paste0("Solución (", round(sol[1],2), ", ", round(sol[2],2), ", ", round(sol[3],2), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold"))
return(hc)
}
d_A <- matrix(c(1, 1, 1, 1, 1, 0, 1, -1, 1), nrow=3, byrow=TRUE)
d_b <- c(6, 3, 2)
# int_a6 <- data.frame(x= c(25/4, 0), y=c(0, 50), label= c("Punto A1", "Punto A2"))
# int_b6 <- data.frame(x= c(-23/7, 0), y=c(0, 23), label= c("Punto B1", "Punto B2"))
#
# graficar_sistema3d(A = a6_A,
#                    b = a6_b,
#                    x_range = c(-5,10),
#                    eq_labels = c("Q=50-8P", "Q=23+7P"),
#                    puntos_a = int_a6,
#                    puntos_b = int_b6)
graficar_sistema3d(d_A,
d_b,
eq_labels = c("x+y+z=6", "x+y=3", "x-y+z=2"))
library(highcharter)
graficar_sistema2d <- function(A, b, x_range = c(-5, 5), step = 0.1,
eq_labels = c("Ecuación 1", "Ecuación 2"),
puntos_a = NULL, puntos_b = NULL,
titulo = "Método gráfico") {
sol <- solve(A, b)
a1 <- A[1,1]; b1 <- A[1,2]; c1 <- b[1]
a2 <- A[2,1]; b2 <- A[2,2]; c2 <- b[2]
x_val <- seq(x_range[1], x_range[2], step)
y1 <- (c1 - a1*x_val) / b1
y2 <- (c2 - a2*x_val) / b2
df1 <- data.frame(x = x_val, y = y1)
df2 <- data.frame(x = x_val, y = y2)
df_sol <- data.frame(x = sol[1], y = sol[2])
hc <- highchart() %>%
hc_add_series(df1, "spline", hcaes(x = x, y = y), name = eq_labels[1], color = "blue",
marker = list(enabled = FALSE)) %>%
hc_add_series(df2, "spline", hcaes(x = x, y = y), name = eq_labels[2], color = "red",
marker = list(enabled = FALSE)) %>%
hc_add_series(df_sol, "scatter", hcaes(x = x, y = y),
name = "Solución",
# paste0("Solución (", round(sol[1],3), ", ", round(sol[2],3), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "black")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold")) %>%
hc_legend(enabled = TRUE) %>%
hc_xAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_yAxis(plotLines = list(list(value = 0, color = "darkgrey", width = 2, zIndex = 3))) %>%
hc_tooltip(shared = FALSE) %>%
hc_plotOptions(series = list(animation = FALSE,
states = list(inactive = list(enabled = FALSE),
hover = list(animation = list(duration = 0)))))
if (!is.null(puntos_a)) {
hc <- hc %>% hc_add_series(puntos_a, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "diamond", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
if (!is.null(puntos_b)) {
hc <- hc %>% hc_add_series(puntos_b, "scatter", hcaes(x = x, y = y, name = label),
showInLegend = FALSE,
marker = list(symbol = "triangle", radius = 6, fillColor = "orange"),
dataLabels = list(enabled = TRUE, format = "{point.name}"))
}
return(hc)
}
graficar_sistema3d <- function(A, b,
range = c(-10, 10), step = 1,
eq_labels = c("Ecuación 1", "Ecuación 2", "Ecuación 3"),
titulo = "Sistema 3x3 - Método gráfico") {
sol <- solve(A, b)
sol_df <- data.frame(x = sol[1], y = sol[2], z = sol[3])
x_seq <- seq(range[1], range[2], step)
y_seq <- seq(range[1], range[2], step)
grid <- expand.grid(x = x_seq, y = y_seq)
z1 <- (b[1] - A[1,1]*grid$x - A[1,2]*grid$y) / A[1,3]
z2 <- (b[2] - A[2,1]*grid$x - A[2,2]*grid$y) / A[2,3]
z3 <- (b[3] - A[3,1]*grid$x - A[3,2]*grid$y) / A[3,3]
df1 <- data.frame(x = grid$x, y = grid$y, z = z1)
df2 <- data.frame(x = grid$x, y = grid$y, z = z2)
df3 <- data.frame(x = grid$x, y = grid$y, z = z3)
hc <- highchart() %>%
hc_chart(type = "scatter3d", options3d = list(
enabled = TRUE, alpha = 10, beta = 30, depth = 500, viewDistance = 25
)) %>%
hc_add_series(df1, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[1], color = "blue", marker = list(radius = 1.5)) %>%
hc_add_series(df2, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[2], color = "red", marker = list(radius = 1.5)) %>%
hc_add_series(df3, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = eq_labels[3], color = "green", marker = list(radius = 1.5)) %>%
hc_add_series(sol_df, type = "scatter3d", hcaes(x = x, y = y, z = z),
name = paste0("Solución (", round(sol[1],2), ", ", round(sol[2],2), ", ", round(sol[3],2), ")"),
marker = list(symbol = "circle", radius = 6, fillColor = "orange")) %>%
hc_title(text = titulo,
style = list(fontSize = "18px", fontWeight = "bold"))
return(hc)
}
d_A <- matrix(c(1, 1, 1, 1, 1, 0, 1, -1, 1), nrow=3, byrow=TRUE)
d_b <- c(6, 3, 2)
# int_a6 <- data.frame(x= c(25/4, 0), y=c(0, 50), label= c("Punto A1", "Punto A2"))
# int_b6 <- data.frame(x= c(-23/7, 0), y=c(0, 23), label= c("Punto B1", "Punto B2"))
#
# graficar_sistema3d(A = a6_A,
#                    b = a6_b,
#                    x_range = c(-5,10),
#                    eq_labels = c("Q=50-8P", "Q=23+7P"),
#                    puntos_a = int_a6,
#                    puntos_b = int_b6)
graficar_sistema3d(d_A,
d_b,
eq_labels = c("x+y+z=6", "x+y=3", "x-y+z=2"))
